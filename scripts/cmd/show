#!/bin/bash
#
# Usage
#   redmine show [options] <ticket_id>
#
# Description
#
# Options
#   -j|--journal  display notes
#   -h            show this message
#

# TODO: support local ticket

show_help() {
	sed -n 2,$[$BASH_LINENO-4]p $BASH_SOURCE | grep "^#" | sed 's/^#/ /'
}

SHOW_JOURNALS=

. $THISDIR/color.sh

while [[ $# -gt 0 ]] ; do
	key="$1"
	case $key in
		-j|--journal)
			SHOW_JOURNALS=true
			shift
			;;
		-h)
			show_help
			exit 0
			;;
		*)
			break
			;;
	esac
done

ISSUEID=$1

if ! check_ticket_id_format $ISSUEID ; then
	echo "invalid issueid format" >&2
	exit 1
fi

if [[ "$ISSUEID" =~ ^L ]] ; then
	cat $TMPD/$ISSUEID/draft.md
	exit
fi

update_local_cache_task $ISSUEID || exit 1
! check_issue_exist $ISSUEID && echo "issue $ISSUEID not found" && exit 1

tmpfile=$TMPDIR/tmp.show.txt
__curl "/issues.json" $TMPDIR/tmp.show "&issue_id=$ISSUEID&include=relations&status_id=*"
convert_to_draft_from_json $ISSUEID $TMPDIR/tmp.show $TMPDIR/tmp.show.txt

if [ "$SHOW_JOURNALS" ] ; then
	fetch_issue $ISSUEID "" $TMPDIR/issue_journal.json

	jq -r ".journals[].id" $TMPDIR/issue_journal.json | tac > $TMPDIR/journal_ids
	for jid in $(cat $TMPDIR/journal_ids) ; do
		jq -r ".journals[] | select(.id == $jid) | .details[] | select(.name == \"description\") | .old_value" $TMPDIR/issue_journal.json > $TMPDIR/journal_${jid}.1
		if [ ! -s "$TMPDIR/journal_${jid}.1" ] ; then
			continue
		fi
		jq -r ".journals[] | select(.id == $jid) | .details[] | select(.name == \"description\") | .new_value" $TMPDIR/issue_journal.json > $TMPDIR/journal_${jid}.2
		# TODO: ステータスの変更を表示させる
		printf "${CL_YELLOW}journal ID: ${jid}${CL_NC}\n" >> $TMPDIR/abcd
		journal_date=$(jq -r ".journals[] | select(.id == $jid) | .created_on" $TMPDIR/issue_journal.json)
		echo "Date: $(date -d $journal_date)" >> $TMPDIR/abcd
		echo "" >> $TMPDIR/abcd
		journal_note=$(jq -r ".journals[] | select(.id == $jid) | .notes" $TMPDIR/issue_journal.json)

		if [ "$journal_note" ] ; then
			echo "$journal_note" | sed 's/^/    /' >> $TMPDIR/abcd
			echo "" >> $TMPDIR/abcd
		fi
		git -c core.whitespace=cr-at-eol diff --color $TMPDIR/journal_${jid}.1 $TMPDIR/journal_${jid}.2 | tail +5 >> $TMPDIR/abcd
	done
	cat $TMPDIR/abcd | less -R
	exit 0
fi

# TODO: use cat if the standard output is connected to pipe
less $tmpfile
