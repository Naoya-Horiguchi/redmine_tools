#!/bin/bash
#
# Usage
#   redmine config [options] <type>
#
# Description
#   <type> can be "project", "tracker", "priority", "status", "user",
#   "version".
#
# Options
#   -u|--update   update/download config
#   -h            show this message
#

show_help() {
	sed -n 2,$[$BASH_LINENO-4]p $BASH_SOURCE | grep "^#" | sed 's/^#/ /'
}

show_projects() {
	__curl "/projects.json" $RM_CONFIG/projects.json "limit=100"
	jq -r ".projects[] | [.id, .name] | @tsv" $RM_CONFIG/projects.json | sort -k1n | column -t -s $'\t'
}

show_users() {
	__curl "/users.json" $RM_CONFIG/users.json "limit=100"
	jq -r ".users[] | [.id, .login] | @tsv" $RM_CONFIG/users.json | sort -k1n | column -t -s $'\t'
}

show_statuses() {
	__curl "/issue_statuses.json" $RM_CONFIG/issue_statuses.json "limit=100"
	jq -r ".issue_statuses[] | [.id, .name] | @tsv" $RM_CONFIG/issue_statuses.json | sort -k1n | column -t -s $'\t'
}

show_priorities() {
	__curl "/enumerations/issue_priorities.json" "$RM_CONFIG/priorities.json" "limit=100"
	jq -r ".issue_priorities[] | [.id, .name] | @tsv" $RM_CONFIG/priorities.json | sort -k1n | column -t -s $'\t'
}

show_trackers() {
	__curl "/trackers.json" $RM_CONFIG/trackers.json "limit=100"
	jq -r ".trackers[] | [.id, .name] | @tsv" $RM_CONFIG/trackers.json | sort -k1n | column -t -s $'\t'
}

show_versions() {
	__curl "/projects/1/versions.json" "$RM_CONFIG/versions/1.json" "limit=100"
	jq -r ".versions[] | [.id, .project.name, .name] | @tsv" $RM_CONFIG/versions/1.json | sort -k1n | column -t -s $'\t'
}

show_time_entries() {
	update_local_cache_time_entries
	jq -r ".time_entries[] | [.project.name, .issue.id, .user.name, .activity.name, .hours, .spent_on] | @tsv" $RM_CONFIG/time_entries.json | sort -k1n | column -t -s $'\t'
}

get_category_list() {
	# jq -r "[.issues[] | select(.category) | .category] | unique_by(.id)" $RM_CONFIG/issues.json > $RM_CONFIG/categories.json
	find $RM_CONFIG/projects/ -name "*.json" | xargs cat | jq '.project.issue_categories[] | select(length > 0)' > $RM_CONFIG/issue_categories.json
}

update_config() {
	mkdir -p $RM_CONFIG/projects
	__curl "/projects.json" $RM_CONFIG/projects.json "limit=100"
	for id in $(jq -r ".projects[].id" $RM_CONFIG/projects.json) ; do
		__curl "/projects/${id}.json" "$RM_CONFIG/projects/${id}.json" "limit=100&include=trackers,issue_categories"
		__curl "/projects/$id/versions.json" "$RM_CONFIG/versions/${id}.json" "limit=100"
	done

	__curl "/enumerations/issue_priorities.json" "$RM_CONFIG/priorities.json" "limit=100"

	__curl "/trackers.json" "$RM_CONFIG/trackers.json" "limit=100"

	__curl "/users.json" "$RM_CONFIG/users.json" "limit=100"

	__curl "/issue_statuses.json" "$RM_CONFIG/issue_statuses.json" "limit=100"

	get_category_list
}

while [[ $# -gt 0 ]] ; do
	key="$1"
	case $key in
		-u|--update)
			update_config
			exit 0
			;;
		-h)
			show_help
			exit 0
			;;
		*)
			break
			;;
	esac
done

# TODO: support pagination (当面は 1 ページ以内に収まる)
# TODO: ondemand update (リスト表示のとき、内部処理で ID 参照が見つからないときの延長で curl する)

type=$1

case "$type" in
	pro|proj|proje|projec|project|projects)
		show_projects
		;;
	u|us|use|user|users)
		show_users
		;;
	s|st|sta|stat|statu|status|statuse|statuses)
		show_statuses
		;;
	pri|prio|prior|priori|priorit|priority|prioriti|priorities)
		show_priorities
		;;
	t|tr|tra|trac|track|tracke|tracker|trackers)
		show_trackers
		;;
	v|ve|ver|vers|versi|versio|version|versions)
		show_versions
		;;
	ti|tim|time)
		show_time_entries
		;;
	task)
		update_local_cache_task $2
		;;
	a|al|all)
		echo "--- versions"
		show_versions
		echo "--- projects"
		show_projects
		echo "--- statuses"
		show_statuses
		echo "--- trackers"
		show_trackers
		echo "--- priorities"
		show_priorities
		echo "--- users"
		show_users
		;;
	*)
		show_help
		;;
esac
